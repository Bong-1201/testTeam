과제풀이
진도 마저 나가기
과제 -> 내일 풀이

안녕 나야 잘 지내 





---------------------------------------------------------------------------------------------------------------------------------------------------
어제 실습 풀이

총가격 보기

c.jsp

가격이 나올 view 먼저 만들기

위에 해빙1하고 밑에는 해빙2 해주기

토탈이라는 변수 불러오려면 토탈이 선언이 되어있어야함

토탈은 구매하지 않으면 0 -> 0으로 초기화

토탈에 v의 금액을 하나하나 더해 넣으면 좋을듯
v.getPrice 

현재 카트가 null인 상황에서는 에러

금액을 계산하는 로직은 팀플 쇼핑몰에서도 해보기

-----
로그인 DB있는것처럼 진행은 member VO랑 memberDAO가 있었어야함
---------------------
memberVO

mid,mpw,name
로그 찍고 하려면 toString

기본 생성자를 직접 명시해줘야함
----------------------
memberDAO

멤버변수라서 생성자 그냥 한거

반드시 가져야 하는거 - public 가지는 비즈니스 메서드 5가지 (CRUD-> insert,delete,update,selectall,selectone)

멤버변수 초기화 해줄수있게 기본생성자 하나두기

초기화와 객체생성을 같이 할려면 VO가서 생성자 하나 만들어두기

VO에 생성자 만들고 와서 마저 정보 입력

만약 내가 가진 아이디와 사용자의 아이디가 같은지 비교
// 아이디가 존재하는 상황

만약 내가 가진 비번과 사용자의 비번이 같은지 비교
// 비밀번호도 일치하는 상황



---------------------------------------------------------------------------------------------------------------------------------------------------
a.jsp

아이디와 비밀번호까지 만들고
url에 정보가 드러나면 안되니까 post형식

세션에서 앞으로 name이라고 부를 예정

폼 데이터에서 보내는 데이터가 2개(아이디랑 비번)








---------------------------------------------------------------------------------------------------------------------------------------------------
d.jsp

// 이 mid와 이 mpw를 가진 회원이 있니?


mVO=mDAO.selectOne(mVO)
만약에 mVO가 null이면
없어도 가긴할건데, 로그인 실패! 안내
else
       
       있으면, a.jsp


	// 있으면 a.jsp로 가고
	// 없어도 가긴할건데, 로그인 실패! 안내

useBean
setProperty
mDAO - 객체화(인스턴스화) - useBean 


상품을 하나 꺼내오는거는 새로운객체 사용
오늘 풀이는 재활용 하는거


if에 알림창
out.println(<script>
<script> 쓴 이유는 alret창 띄우려고

history는 데이터가 남음
---------------------------------------------------------------------------------------------------------------------------------------------------
test01
내장객체

out - 내장객체 사용해서 자바에서도 html 태그를 사용가능하게 해주고
	주로 JS(스크립트) 사용

request - 사용자의 요청정보가 들어있는 내장객체
	주로 .getParameter()를 통해 데이터를 받아오는 역할
	요청단위 - 한번하면 사라짐 -페이지 to 페이지 (페이지 단위)

response(응답)- 서버데이터 사용 - 어딘가로 페이지 이동시켜줌
	주로 .sendRedirect()를 통해 화면이동
	-> <a href=''></a>
	-> location.href, window.open,history.go
=> GET 처럼 진행 ( url에 어디로 간지가 보임)
      <jsp:forward> 액션태그와 유사하지만
	: 데이터를 유지,url 변경 xxx
	데이터 유지 xxx, url 변경 O(GET)
session
	브라우저 단위로 저장되는 데이터
	ex) 로그인, 장바구니, 광고

forward

위에서 밑으로 갈수록 단위가 커짐

application - session보다 큰 단위 
	서버(톰캣) 단위로 저장되는 데이터
	미니홈피 투데이 방문자수
	내가 브라우저를 껐다가 켜도 유지되어야함(정보가)
	서버유지 비용이 많이든다
쇼핑몰중에 브라우저 껐다가 켰는데도 장바구니가 유지되는!! <<<
ex) 티스토리에 누적방문수 - db / 오늘 방문수 - 휘발성 ( 없어짐)
★ "중요 포인트"
	왜 session을 사용했나요?
	-> 왜 사용했는지를 잘 논리적으로 설명할수있으면 ㅇㅋ!!!

------
자바공간 열고 
application.setAttribute로 멤버 이름 삽입

카운트 해서 올라가게 해두고

하이퍼링크 누르면 test02로 가게 만들어둠
---------------------------------------------------------------------------------------------------------------------------------------------------
test02

방문자수가 올라가야하는 공간

 Integer cnt=application.getAttribute("cnt") - 선언해두기  카운트 사용할거니까
 숫자가 오르도록 ++
오늘의 방문자수는 ㅁㅁ명입니다.

받아와서 1개 올리고 저장해두는 작업 - 세션이면 저장이 안되겠지만 브라우저 껐다켜도 유지됨 ( 서버가 켜져있는 상황이라서 유지됨)
다른 브라우저로 진입해도 유지가 되고있다


---------------------------------------------------------------------------------------------------------------------------------------------------
문제 - 4시에 풀이 예정

a.jsp에서 로그인을 수행
아이디 비번 로그인 버튼
로그인 성공하면 글을 작성할수있는 화면이 나옴
[        ] 글작성 버튼 누르면 지금까지 누가 글을 작성했는가 보여주면 됨
화면에 보이는 페이지는 1개
로그인, 글작성 등의 기능을
수행할페이지는 여러개

요구사항 
1. 글쓰는 공간은 로그인한 사람에게만 보일것
2. 로그인 실패하면 실패했다는 안내문구(alert)
3. 글 내용이 없다면 등록 불가능하도록

힌트) 로그인 정보 session
	글 내용은 application
			ArrayList<String>으로 관리
	사용할 모델은 MemberVO, MemberDAO
				selectOne()






---------------------------------------------------------------------------------------------------------------------------------------------------
문제 - 한글 코딩

a.jsp
아이디랑 비밀번호를 만들꺼임
url에 정보가 나오면 안되니까 post형식
로그인에 성공하면 글쓸수있는 c.jsp페이지로 이동하게 action을 설정
그리고 세션에 저장된 이름을 불러와서 ~~~님, ㅎㅇㅎㅇ 설정
ㅎㅇㅎㅇ가 나오고 로그아웃 페이지 d.jsp로 이동할수있는 a태그 설정하기
b에서 로그아웃


로그인에 실패하면 로그인에 실패했습니다 라고 안내문구를 보여주고
글쓰는 페이지 보여주면 안되니까 다시 로그인 창만 보여줌 설마 반복문 돌리나?

c.jsp
글 내용 저장소 application로 저장
ArrayList<string>으로 관리

여기서 글을 저장해두고 저기서 버튼 눌러서 일로오면 
여기에 저장된글을 글쓰는페이지에 보내서 저장된 글을 사용자한테 보여줌

글을 받아와서
그걸 ㅁㅁ에 추가하고

만약에 저장해둘곳이 없다면 
새로 만들어서 담아둔다

사용자한테 새로운 글이 추가되었다고 알려주고
다시 메인 글쓰는 페이지로 이동한다

글을 쓰는데 아무 글도 없이 공백이면 등록이 불가능하도록


제네릭타입 바뀌고 사용자한테 댓글 가져와야되고 2개

d.jsp
로그인 정보는 session으로 저장

로그인을 했다면 여기서 로그인한 정보를 저장해두고 비교
사용자가 입력한 아이디 값을가져와서 name에 mid가 적혀있는지 확인해서
만약 그 사용자의 아이디가 데이터에 없다면 null이라면 로그인에 실패했다는 문구를 출력
그리고 다시 로그인 페이지로 돌아간다

로그인에 성공했다면 글을쓰는페이지로 이동







---------------------------------------------------------------------------------------------------------------------------------------------------
<%
MemberVO mVO= new MemberVO();
mVO.setmid(requst.parameter); // 사용자가 입력한 아이디 비번
mVO.setmpw();
mVO=mDAO.selectOne(mVO);
if(mVO==null){
	out.println("<script>alert('로그인 실패...');history.go(-1);</script>"); //out.println-내부객체
	// 로그인 실패
	
}
	else{
		session.setAttribute("name", mVO.getName()); // mVO에 있는 값을 가져와서 세팅
	//로그인 성공
		response.sendRedirect("a.jsp");
	}
%>
1.넘어온값 아이디 비번들을 셀렉에서 
2. 만약 아이디가 널이 아니라면 값이 있는거 로긴 성공
3. 세션에 성공한 값을 저장
4. 나온게 널이면 실패 후 뒤로가기


로그인 하는 순서 - 바디 먼저 적고 위로가서 액션태그 



for(값을 받아줄 변수 : 값을 넘결줄 배열 / 리스트){
	
}
변수 선언
변수 타입  변수명 = 값;
이게 선언과 초기화인데요
선언
변수타입 변수명; -> 이게 선언
변수명 = 값; 이게 초기화
ex) String name ="ghd"; 선언하면서 초기화
String name; 선언
name = "ㅇㄹㅇㄹ"초기화
---------------------------------------------------------------------------------------------------------------------------------------------------
문제 쌤 풀이

메세지는 어플리케이션으로
회원정보는 디비로 관리

a.jsp
로그인이 안되면 작성이 안되게 설정

네임이 널일떄 설정 안했을때 disabled 걸어두면 로그인 못하게 / submit도 못하게 submit에 disabled 걸어둠
disabled 걸면 못함

브라우저를 닫고 다시열었을때 세션은 유지 안됨

c.jsp
로그인 버튼 누르면 이쪽으로 옴

// if else 안에 있어야 response가 실행
아니면 바로 a로 돌아가게 되어있어서

만약에 메세지의 내용이 하나도 들어가있지 않다면 - if(msg.blank)


request.Parameter 쓸수있다는건 이전 페이지에서 form영역에 input name 속성으로 writter가 있다는 의미

이게 글쓰는 코드의 근본







---------------------------------------------------------------------------------------------------------------------------------------------------







---------------------------------------------------------------------------------------------------------------------------------------------------











---------------------------------------------------------------------------------------------------------------------------------------------------










---------------------------------------------------------------------------------------------------------------------------------------------------